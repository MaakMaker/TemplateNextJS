{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useContext, createContext } from \"react\";\nimport { auth, facebookAuthProvider, githubAuthProvider, googleAuthProvider, twitterAuthProvider } from \"../firebaseConfig/index\";\nvar authContext = /*#__PURE__*/createContext(); // Provider component that wraps your app and makes auth object ..\n// ... available to any child component that calls useAuth().\n\nexport function ProvideAuth(_ref) {\n  _s();\n\n  var children = _ref.children;\n  var auth = useProvideAuth();\n  return __jsx(authContext.Provider, {\n    value: auth\n  }, children);\n} // Hook for child components to get the auth object ...\n// ... and re-render when it changes.\n\n_s(ProvideAuth, \"XNU4Jn8u4aVzJknlKOHFJq03xMo=\", false, function () {\n  return [useProvideAuth];\n});\n\n_c = ProvideAuth;\nexport var useAuth = function useAuth() {\n  _s2();\n\n  return useContext(authContext);\n}; // Provider hook that creates auth object and handles state\n\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nfunction useProvideAuth() {\n  _s3();\n\n  var _useState = useState(null),\n      user = _useState[0],\n      setUser = _useState[1];\n\n  var _useState2 = useState(true),\n      isLoadingUser = _useState2[0],\n      setLoadingUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      isLoading = _useState3[0],\n      setLoading = _useState3[1];\n\n  var _useState4 = useState(''),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var fetchStart = function fetchStart() {\n    setLoading(true);\n    setError('');\n  };\n\n  var fetchSuccess = function fetchSuccess() {\n    setLoading(false);\n    setError('');\n  };\n\n  var fetchError = function fetchError(error) {\n    setLoading(false);\n    setError(error.message);\n  }; // Wrap any Firebase methods we want to use making sure ...\n  // ... to save the user to state.\n\n\n  var loginWithSocial = function loginWithSocial(platform, callbackFun) {\n    var authProvider = googleAuthProvider;\n\n    if (platform === 'facebook') {\n      authProvider = facebookAuthProvider;\n    }\n\n    if (platform === 'github') {\n      authProvider = githubAuthProvider;\n    }\n\n    if (platform === 'twitter') {\n      authProvider = twitterAuthProvider;\n    }\n\n    try {\n      fetchStart();\n      return auth.signInWithPopup(authProvider).then(function (response) {\n        fetchSuccess();\n        setUser(response.user);\n        if (callbackFun) callbackFun();\n        return response.user;\n      })[\"catch\"](function (error) {\n        fetchError(error);\n      });\n    } catch (error) {\n      fetchError(error);\n    }\n  };\n\n  var login = function login(email, password, callbackFun) {\n    try {\n      fetchStart();\n      return auth.signInWithEmailAndPassword(email, password).then(function (response) {\n        fetchSuccess();\n        setUser(response.user);\n        if (callbackFun) callbackFun();\n        return response.user;\n      })[\"catch\"](function (error) {\n        fetchError(error);\n      });\n    } catch (error) {\n      fetchError(error);\n    }\n  };\n\n  var signup = function signup(email, password, callbackFun) {\n    try {\n      fetchStart();\n      return auth.createUserWithEmailAndPassword(email, password).then(function (response) {\n        fetchSuccess();\n        setUser(response.user);\n        if (callbackFun) callbackFun();\n        return response.user;\n      })[\"catch\"](function (error) {\n        fetchError(error);\n      });\n    } catch (error) {\n      fetchError(error);\n    }\n  };\n\n  var signOut = function signOut() {\n    return auth.signOut().then(function () {\n      setUser(false);\n    });\n  };\n\n  var sendPasswordResetEmail = function sendPasswordResetEmail(email, callbackFun) {\n    try {\n      fetchStart();\n      return auth.sendPasswordResetEmail(email).then(function () {\n        fetchSuccess();\n        if (callbackFun) callbackFun();\n        return true;\n      })[\"catch\"](function (error) {\n        fetchError(error);\n      });\n    } catch (error) {\n      fetchError(error);\n    }\n  };\n\n  var confirmPasswordReset = function confirmPasswordReset(code, password, callbackFun) {\n    try {\n      fetchStart();\n      return auth.confirmPasswordReset(code, password).then(function () {\n        fetchSuccess();\n        if (callbackFun) callbackFun();\n        return true;\n      })[\"catch\"](function (error) {\n        fetchError(error);\n      });\n    } catch (error) {\n      fetchError(error);\n    }\n  }; // Subscribe to user on mount\n  // Because this sets state in the callback it will cause any ...\n  // ... component that utilizes this hook to re-render with the ...\n  // ... latest auth object.\n\n\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) {\n        setUser(user);\n      } else {\n        setUser(false);\n      }\n\n      setLoadingUser(false);\n    }); // Cleanup subscription on unmount\n\n    return function () {\n      return unsubscribe();\n    };\n  }, []); // Return the user object and auth methods\n\n  return {\n    isLoadingUser: isLoadingUser,\n    isLoading: isLoading,\n    user: user,\n    error: error,\n    login: login,\n    signup: signup,\n    signOut: signOut,\n    sendPasswordResetEmail: sendPasswordResetEmail,\n    confirmPasswordReset: confirmPasswordReset,\n    loginWithSocial: loginWithSocial\n  };\n}\n\n_s3(useProvideAuth, \"F4xLLTkjSgxCZs1a4kCZQz+xKeQ=\");\n\nexport var isUnRestrictedRoute = function isUnRestrictedRoute(pathname) {\n  return pathname === '/signin' || pathname === '/signup';\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"ProvideAuth\");","map":{"version":3,"sources":["D:/TemplateAdminPro/util/use-auth.js"],"names":["React","useState","useEffect","useContext","createContext","auth","facebookAuthProvider","githubAuthProvider","googleAuthProvider","twitterAuthProvider","authContext","ProvideAuth","children","useProvideAuth","useAuth","user","setUser","isLoadingUser","setLoadingUser","isLoading","setLoading","error","setError","fetchStart","fetchSuccess","fetchError","message","loginWithSocial","platform","callbackFun","authProvider","signInWithPopup","then","response","login","email","password","signInWithEmailAndPassword","signup","createUserWithEmailAndPassword","signOut","sendPasswordResetEmail","confirmPasswordReset","code","unsubscribe","onAuthStateChanged","isUnRestrictedRoute","pathname"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useContext, createContext} from \"react\";\r\nimport {\r\n  auth,\r\n  facebookAuthProvider,\r\n  githubAuthProvider,\r\n  googleAuthProvider,\r\n  twitterAuthProvider\r\n} from \"../firebaseConfig/index\";\r\n\r\nconst authContext = createContext();\r\n\r\n\r\n// Provider component that wraps your app and makes auth object ..\r\n// ... available to any child component that calls useAuth().\r\n\r\nexport function ProvideAuth({children}) {\r\n  const auth = useProvideAuth();\r\n  return <authContext.Provider value={auth}>{children}</authContext.Provider>;\r\n}\r\n\r\n// Hook for child components to get the auth object ...\r\n// ... and re-render when it changes.\r\n\r\nexport const useAuth = () => {\r\n  return useContext(authContext);\r\n};\r\n\r\n\r\n// Provider hook that creates auth object and handles state\r\n\r\nfunction useProvideAuth() {\r\n  const [user, setUser] = useState(null);\r\n  const [isLoadingUser, setLoadingUser] = useState(true);\r\n  const [isLoading, setLoading] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const fetchStart = () => {\r\n    setLoading(true);\r\n    setError('');\r\n  }\r\n\r\n  const fetchSuccess = () => {\r\n    setLoading(false);\r\n    setError('');\r\n  }\r\n\r\n  const fetchError = (error) => {\r\n    setLoading(false);\r\n    setError(error.message);\r\n  }\r\n\r\n  // Wrap any Firebase methods we want to use making sure ...\r\n  // ... to save the user to state.\r\n\r\n  const loginWithSocial = (platform, callbackFun) => {\r\n    let authProvider = googleAuthProvider;\r\n    if (platform === 'facebook') {\r\n      authProvider = facebookAuthProvider;\r\n    }\r\n\r\n    if (platform === 'github') {\r\n      authProvider = githubAuthProvider;\r\n    }\r\n\r\n    if (platform === 'twitter') {\r\n      authProvider = twitterAuthProvider;\r\n    }\r\n\r\n    try {\r\n      fetchStart();\r\n      return auth.signInWithPopup(authProvider)\r\n        .then(response => {\r\n          fetchSuccess();\r\n          setUser(response.user);\r\n          if (callbackFun) callbackFun();\r\n          return response.user;\r\n        }).catch(error => {\r\n          fetchError(error);\r\n        });\r\n    } catch (error) {\r\n      fetchError(error);\r\n    }\r\n  }\r\n\r\n  const login = (email, password, callbackFun) => {\r\n    try {\r\n      fetchStart();\r\n      return auth.signInWithEmailAndPassword(email, password)\r\n        .then(response => {\r\n          fetchSuccess();\r\n          setUser(response.user);\r\n          if (callbackFun) callbackFun();\r\n          return response.user;\r\n        }).catch(error => {\r\n          fetchError(error);\r\n        });\r\n    } catch (error) {\r\n      fetchError(error);\r\n    }\r\n  };\r\n\r\n  const signup = (email, password, callbackFun) => {\r\n    try {\r\n      fetchStart();\r\n      return auth.createUserWithEmailAndPassword(email, password)\r\n        .then(response => {\r\n          fetchSuccess();\r\n          setUser(response.user);\r\n          if (callbackFun) callbackFun();\r\n          return response.user;\r\n        }).catch(error => {\r\n          fetchError(error);\r\n        });\r\n    } catch (error) {\r\n      fetchError(error);\r\n    }\r\n  };\r\n\r\n  const signOut = () => {\r\n    return auth.signOut()\r\n      .then(() => {\r\n        setUser(false);\r\n      });\r\n  };\r\n\r\n  const sendPasswordResetEmail = (email, callbackFun) => {\r\n    try {\r\n      fetchStart();\r\n      return auth.sendPasswordResetEmail(email)\r\n        .then(() => {\r\n          fetchSuccess();\r\n          if (callbackFun) callbackFun();\r\n          return true;\r\n        }).catch(error => {\r\n          fetchError(error);\r\n        });\r\n    } catch (error) {\r\n      fetchError(error);\r\n    }\r\n  };\r\n\r\n  const confirmPasswordReset = (code, password, callbackFun) => {\r\n    try {\r\n      fetchStart();\r\n      return auth.confirmPasswordReset(code, password)\r\n        .then(() => {\r\n          fetchSuccess();\r\n          if (callbackFun) callbackFun();\r\n          return true;\r\n        }).catch(error => {\r\n          fetchError(error);\r\n        });\r\n    } catch (error) {\r\n      fetchError(error);\r\n    }\r\n  };\r\n\r\n  // Subscribe to user on mount\r\n  // Because this sets state in the callback it will cause any ...\r\n  // ... component that utilizes this hook to re-render with the ...\r\n  // ... latest auth object.\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged(user => {\r\n      if (user) {\r\n        setUser(user);\r\n      } else {\r\n        setUser(false);\r\n      }\r\n\r\n      setLoadingUser(false);\r\n    });\r\n\r\n    // Cleanup subscription on unmount\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Return the user object and auth methods\r\n  return {\r\n    isLoadingUser,\r\n    isLoading,\r\n    user,\r\n    error,\r\n    login,\r\n    signup,\r\n    signOut,\r\n    sendPasswordResetEmail,\r\n    confirmPasswordReset,\r\n    loginWithSocial\r\n  };\r\n}\r\n\r\nexport const isUnRestrictedRoute = (pathname) => {\r\n  return pathname === '/signin' || pathname === '/signup'\r\n}\r\n"]},"metadata":{},"sourceType":"module"}