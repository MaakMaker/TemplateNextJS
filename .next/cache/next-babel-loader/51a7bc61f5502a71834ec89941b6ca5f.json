{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { SWITCH_LANGUAGE, TOGGLE_COLLAPSED_NAV, WINDOW_WIDTH } from \"../../constants/ActionTypes\";\nimport { NAV_STYLE, NAV_STYLE_FIXED, SET_PATH_NAME, THEME_TYPE, THEME_TYPE_SEMI_DARK } from \"../../constants/ThemeSetting\";\nconst initialSettings = {\n  navCollapsed: true,\n  navStyle: NAV_STYLE_FIXED,\n  themeType: THEME_TYPE_SEMI_DARK,\n  pathname: '',\n  width: 1367,\n  isDirectionRTL: false,\n  locale: {\n    languageId: 'english',\n    locale: 'en',\n    name: 'English',\n    icon: 'us'\n  }\n};\n\nconst settings = (state = initialSettings, action) => {\n  switch (action.type) {\n    case TOGGLE_COLLAPSED_NAV:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        navCollapsed: action.navCollapsed\n      });\n\n    case SET_PATH_NAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        pathname: action.pathname\n      });\n\n    case WINDOW_WIDTH:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        width: action.width\n      });\n\n    case THEME_TYPE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        themeType: action.themeType\n      });\n\n    case NAV_STYLE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        navStyle: action.navStyle\n      });\n\n    case SWITCH_LANGUAGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        locale: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default settings;","map":{"version":3,"sources":["C:/Users/linhm/Downloads/Telegram Desktop/TemplateNextjs/redux/reducers/Settings.js"],"names":["SWITCH_LANGUAGE","TOGGLE_COLLAPSED_NAV","WINDOW_WIDTH","NAV_STYLE","NAV_STYLE_FIXED","SET_PATH_NAME","THEME_TYPE","THEME_TYPE_SEMI_DARK","initialSettings","navCollapsed","navStyle","themeType","pathname","width","isDirectionRTL","locale","languageId","name","icon","settings","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,eAAR,EAAyBC,oBAAzB,EAA+CC,YAA/C,QAAkE,6BAAlE;AACA,SACEC,SADF,EAEEC,eAFF,EAGEC,aAHF,EAIEC,UAJF,EAKEC,oBALF,QAMO,8BANP;AAQA,MAAMC,eAAe,GAAG;AACtBC,EAAAA,YAAY,EAAE,IADQ;AAEtBC,EAAAA,QAAQ,EAAEN,eAFY;AAGtBO,EAAAA,SAAS,EAAEJ,oBAHW;AAItBK,EAAAA,QAAQ,EAAE,EAJY;AAKtBC,EAAAA,KAAK,EAAE,IALe;AAMtBC,EAAAA,cAAc,EAAE,KANM;AAOtBC,EAAAA,MAAM,EAAE;AACNC,IAAAA,UAAU,EAAE,SADN;AAEND,IAAAA,MAAM,EAAE,IAFF;AAGNE,IAAAA,IAAI,EAAE,SAHA;AAINC,IAAAA,IAAI,EAAE;AAJA;AAPc,CAAxB;;AAeA,MAAMC,QAAQ,GAAG,CAACC,KAAK,GAAGZ,eAAT,EAA0Ba,MAA1B,KAAqC;AACpD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKrB,oBAAL;AACE,6CACKmB,KADL;AAEEX,QAAAA,YAAY,EAAEY,MAAM,CAACZ;AAFvB;;AAIF,SAAKJ,aAAL;AACE,6CACKe,KADL;AAEER,QAAAA,QAAQ,EAAES,MAAM,CAACT;AAFnB;;AAIF,SAAKV,YAAL;AACE,6CACKkB,KADL;AAEEP,QAAAA,KAAK,EAAEQ,MAAM,CAACR;AAFhB;;AAIF,SAAKP,UAAL;AACE,6CACKc,KADL;AAEET,QAAAA,SAAS,EAAEU,MAAM,CAACV;AAFpB;;AAIF,SAAKR,SAAL;AACE,6CACKiB,KADL;AAEEV,QAAAA,QAAQ,EAAEW,MAAM,CAACX;AAFnB;;AAIF,SAAKV,eAAL;AACE,6CACKoB,KADL;AAEEL,QAAAA,MAAM,EAAEM,MAAM,CAACE;AAFjB;;AAKF;AACE,aAAOH,KAAP;AAjCJ;AAmCD,CApCD;;AAsCA,eAAeD,QAAf","sourcesContent":["import {SWITCH_LANGUAGE, TOGGLE_COLLAPSED_NAV, WINDOW_WIDTH} from \"../../constants/ActionTypes\";\r\nimport {\r\n  NAV_STYLE,\r\n  NAV_STYLE_FIXED,\r\n  SET_PATH_NAME,\r\n  THEME_TYPE,\r\n  THEME_TYPE_SEMI_DARK\r\n} from \"../../constants/ThemeSetting\";\r\n\r\nconst initialSettings = {\r\n  navCollapsed: true,\r\n  navStyle: NAV_STYLE_FIXED,\r\n  themeType: THEME_TYPE_SEMI_DARK,\r\n  pathname: '',\r\n  width: 1367,\r\n  isDirectionRTL: false,\r\n  locale: {\r\n    languageId: 'english',\r\n    locale: 'en',\r\n    name: 'English',\r\n    icon: 'us'\r\n  }\r\n};\r\n\r\nconst settings = (state = initialSettings, action) => {\r\n  switch (action.type) {\r\n    case TOGGLE_COLLAPSED_NAV:\r\n      return {\r\n        ...state,\r\n        navCollapsed: action.navCollapsed\r\n      };\r\n    case SET_PATH_NAME:\r\n      return {\r\n        ...state,\r\n        pathname: action.pathname\r\n      };\r\n    case WINDOW_WIDTH:\r\n      return {\r\n        ...state,\r\n        width: action.width,\r\n      };\r\n    case THEME_TYPE:\r\n      return {\r\n        ...state,\r\n        themeType: action.themeType\r\n      };\r\n    case NAV_STYLE:\r\n      return {\r\n        ...state,\r\n        navStyle: action.navStyle\r\n      };\r\n    case SWITCH_LANGUAGE:\r\n      return {\r\n        ...state,\r\n        locale: action.payload,\r\n\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default settings;\r\n"]},"metadata":{},"sourceType":"module"}