{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { FETCH_ERROR, FETCH_START, FETCH_SUCCESS, HIDE_MESSAGE, SHOW_MESSAGE } from \"../../constants/ActionTypes\";\nconst INIT_STATE = {\n  error: \"\",\n  loading: false,\n  message: ''\n};\nexport default ((state = INIT_STATE, action) => {\n  switch (action.type) {\n    case FETCH_START:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: '',\n          message: '',\n          loading: true\n        });\n      }\n\n    case FETCH_SUCCESS:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: '',\n          message: '',\n          loading: false\n        });\n      }\n\n    case SHOW_MESSAGE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error: '',\n          message: action.payload,\n          loading: false\n        });\n      }\n\n    case FETCH_ERROR:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loading: false,\n          error: action.payload,\n          message: ''\n        });\n      }\n\n    case HIDE_MESSAGE:\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loading: false,\n          error: '',\n          message: ''\n        });\n      }\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/linhm/Downloads/Telegram Desktop/TemplateNextjs/redux/reducers/Common.js"],"names":["FETCH_ERROR","FETCH_START","FETCH_SUCCESS","HIDE_MESSAGE","SHOW_MESSAGE","INIT_STATE","error","loading","message","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,WAAR,EAAqBC,WAArB,EAAkCC,aAAlC,EAAiDC,YAAjD,EAA+DC,YAA/D,QAAkF,6BAAlF;AAEA,MAAMC,UAAU,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,OAAO,EAAE,KAFQ;AAGjBC,EAAAA,OAAO,EAAE;AAHQ,CAAnB;AAMA,gBAAe,CAACC,KAAK,GAAGJ,UAAT,EAAqBK,MAArB,KAAgC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,WAAL;AAAkB;AAChB,+CAAWQ,KAAX;AAAkBH,UAAAA,KAAK,EAAE,EAAzB;AAA6BE,UAAAA,OAAO,EAAE,EAAtC;AAA0CD,UAAAA,OAAO,EAAE;AAAnD;AACD;;AACD,SAAKL,aAAL;AAAoB;AAClB,+CAAWO,KAAX;AAAkBH,UAAAA,KAAK,EAAE,EAAzB;AAA6BE,UAAAA,OAAO,EAAE,EAAtC;AAA0CD,UAAAA,OAAO,EAAE;AAAnD;AACD;;AACD,SAAKH,YAAL;AAAmB;AACjB,+CAAWK,KAAX;AAAkBH,UAAAA,KAAK,EAAE,EAAzB;AAA6BE,UAAAA,OAAO,EAAEE,MAAM,CAACE,OAA7C;AAAsDL,UAAAA,OAAO,EAAE;AAA/D;AACD;;AACD,SAAKP,WAAL;AAAkB;AAChB,+CAAWS,KAAX;AAAkBF,UAAAA,OAAO,EAAE,KAA3B;AAAkCD,UAAAA,KAAK,EAAEI,MAAM,CAACE,OAAhD;AAAyDJ,UAAAA,OAAO,EAAE;AAAlE;AACD;;AACD,SAAKL,YAAL;AAAmB;AACjB,+CAAWM,KAAX;AAAkBF,UAAAA,OAAO,EAAE,KAA3B;AAAkCD,UAAAA,KAAK,EAAE,EAAzC;AAA6CE,UAAAA,OAAO,EAAE;AAAtD;AACD;;AACD;AACE,aAAOC,KAAP;AAjBJ;AAmBD,CApBD","sourcesContent":["import {FETCH_ERROR, FETCH_START, FETCH_SUCCESS, HIDE_MESSAGE, SHOW_MESSAGE} from \"../../constants/ActionTypes\"\r\n\r\nconst INIT_STATE = {\r\n  error: \"\",\r\n  loading: false,\r\n  message: ''\r\n};\r\n\r\nexport default (state = INIT_STATE, action) => {\r\n  switch (action.type) {\r\n    case FETCH_START: {\r\n      return {...state, error: '', message: '', loading: true};\r\n    }\r\n    case FETCH_SUCCESS: {\r\n      return {...state, error: '', message: '', loading: false};\r\n    }\r\n    case SHOW_MESSAGE: {\r\n      return {...state, error: '', message: action.payload, loading: false};\r\n    }\r\n    case FETCH_ERROR: {\r\n      return {...state, loading: false, error: action.payload, message: ''};\r\n    }\r\n    case HIDE_MESSAGE: {\r\n      return {...state, loading: false, error: '', message: ''};\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}